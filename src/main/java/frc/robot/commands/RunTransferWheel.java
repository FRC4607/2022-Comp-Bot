// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

package frc.robot.commands;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.Constants.FlywheelConstants;
import frc.robot.subsystems.FlywheelSubsystem;

/**
 *
 */
public class RunTransferWheel extends CommandBase {

    private final FlywheelSubsystem m_flywheelSubsystem;
    private final boolean m_reverse;

    public RunTransferWheel(FlywheelSubsystem flywheelSubsystem, boolean reverse) {
        m_flywheelSubsystem = flywheelSubsystem;
        addRequirements(m_flywheelSubsystem);
        
        m_reverse = reverse;

    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
        
    }

    @Override
    public void execute() {
        if (m_flywheelSubsystem.constantSpeed()) {
            if (!m_reverse) {
                //System.out.println("Spining Transfer Wheel");
                m_flywheelSubsystem.setTransferWheel(FlywheelConstants.transferWheelSpeed);
            }
            else {
                m_flywheelSubsystem.setTransferWheel(-FlywheelConstants.transferWheelSpeed);
            }
        } else {
                m_flywheelSubsystem.setTransferWheel(0);
        }
    }

    // Called once the command ends or is interrupted.
    @Override
    public void end(boolean interrupted) {
        m_flywheelSubsystem.setTransferWheel(0);
    }

    // Returns true when the command should end.
    @Override
    public boolean isFinished() {
        return false;
    }

    @Override
    public boolean runsWhenDisabled() {
        return false;
    }
}
